#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

const char* ssid = "REDE WIFI";
const char* password = "SENHA WIFI";
const char* serverAddress = "http://SERVIDOR_WEB.com/dados.php";

const int TRIG_PIN = 4; // Pino do Trigger do sensor ultrassônico
const int ECHO_PIN = 5; // Pino do Echo do sensor ultrassônico

const long TIMEOUT = 5000; // Tempo máximo de 5 segundos sem objetos passando

unsigned long lastObjectTime = 0; // Tempo do último objeto detectado
int objectCount = 0; // Contador de objetos

WiFiClient client;
HTTPClient http;

void setup() {
  Serial.begin(115200);
  delay(10);

  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT); 

  connectWiFi();
}

void loop() {
  int distance = getDistance(); // Obtém a distância do objeto

  if (distance < 20) { // Se um objeto estiver a menos de 20 cm
    objectCount++; // Incrementa o contador
    lastObjectTime = millis(); // Atualiza o tempo do último objeto
    Serial.print("Objeto detectado: ");
    Serial.println(objectCount);
    sendData("objeto_detectado", String(objectCount));
  }

  if (millis() - lastObjectTime > TIMEOUT) { // Se passaram mais de 5 segundos sem objetos
    Serial.println("Maquina parada");
    sendData("maquina_parada", "");
    objectCount = 0;
  }
}

int getDistance() {
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);

  long duration = pulseIn(ECHO_PIN, HIGH);
  int distance = duration * 0.034 / 2;
  return distance;
}

void connectWiFi() {
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi conectado");
}

void sendData(String event, String data) {
  http.begin(client, serverAddress);
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");
  String postData = "event=" + event + "&data=" + data;
  int httpCode = http.POST(postData);
  http.end();
}
